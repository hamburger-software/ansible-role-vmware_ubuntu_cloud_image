---
# tasks file for vmware_ubuntu_cloud_image

- name: Ensure mandatory connection parameters are given
  ansible.builtin.fail:
    msg: "At least one of 'ssh_keys' and 'password' must be given"
  when: ssh_keys is undefined and password is undefined
  run_once: true

- name: Deploy OVA file
  tags: deploy-ova
  community.vmware.vmware_deploy_ovf:
    hostname: "{{ vcenter_hostname | default(omit) }}"
    username: "{{ vcenter_username | default(omit) }}"
    password: "{{ vcenter_password | default(omit) }}"
    validate_certs: "{{ vcenter_validate_certs | default(omit) }}"
    datacenter: "{{ vmware_datacenter }}"
    datastore: "{{ vmware_datastore }}"
    folder: "{{ vmware_folder | default(omit) }}"
    resource_pool: "{{ vmware_resource_pool | default(omit) }}"
    networks: "{{ vmware_networks | default(omit) }}"
    allow_duplicates: false
    ova: "{{ ova_file }}"
    name: "{{ vm_guestname }}"
    properties:
      hostname: "{{ vm_hostname }}"
      user-data: "{{ lookup('template', 'user-data.j2') | b64encode }}"
    power_on: false
  delegate_to: localhost

- name: Configure VM
  tags: configure-vm
  community.vmware.vmware_guest:
    hostname: "{{ vcenter_hostname | default(omit) }}"
    username: "{{ vcenter_username | default(omit) }}"
    password: "{{ vcenter_password | default(omit) }}"
    validate_certs: "{{ vcenter_validate_certs | default(omit) }}"
    folder: "{{ vmware_folder | default(omit) }}"
    name: "{{ vm_guestname }}"
    annotation: "{{ annotation | default(omit) }}"
    hardware: "{{ hardware | default(omit) }}"
    customvalues: "{{ customvalues | default(omit) }}"
    advanced_settings: "{{ advanced_settings | default(omit) }}"
    state: present
  register: configure_result
  delegate_to: localhost

- name: Configure video card settings
  tags: configure-vm
  community.vmware.vmware_guest_video:
    hostname: "{{ vcenter_hostname | default(omit) }}"
    username: "{{ vcenter_username | default(omit) }}"
    password: "{{ vcenter_password | default(omit) }}"
    validate_certs: "{{ vcenter_validate_certs | default(omit) }}"
    datacenter: "{{ vmware_datacenter }}"
    folder: "{{ vmware_folder | default(omit) }}"
    name: "{{ vm_guestname }}"
    gather_video_facts: "{{ video_card.gather_video_facts | default(false) }}"
    use_auto_detect: "{{ video_card.use_auto_detect | default(false) }}"
    display_number: "{{ video_card.display_number | default(1) }}"
    video_memory_mb: "{{ video_card.video_memory_mb | default(omit) }}"
    enable_3D: "{{ video_card.enable_3D | default(omit) }}"
    renderer_3D: "{{ video_card.renderer_3D | default(omit) }}"
    memory_3D_mb: "{{ video_card.memory_3D_mb | default(omit) }}"
  delegate_to: localhost
  when: configure_result.instance.hw_power_status == "poweredOff"

- name: Configure disks
  tags: configure-vm
  community.vmware.vmware_guest_disk:
    hostname: "{{ vcenter_hostname | default(omit) }}"
    username: "{{ vcenter_username | default(omit) }}"
    password: "{{ vcenter_password | default(omit) }}"
    validate_certs: "{{ vcenter_validate_certs | default(omit) }}"
    datacenter: "{{ vmware_datacenter }}"
    name: "{{ vm_guestname }}"
    disk: "{{ disk | default(omit) }}"
  delegate_to: localhost

- name: Start VM
  tags: start-vm
  community.vmware.vmware_guest:
    hostname: "{{ vcenter_hostname | default(omit) }}"
    username: "{{ vcenter_username | default(omit) }}"
    password: "{{ vcenter_password | default(omit) }}"
    validate_certs: "{{ vcenter_validate_certs | default(omit) }}"
    name: "{{ vm_guestname }}"
    state: poweredon
    wait_for_ip_address: true
  delegate_to: localhost

- name: Gather vm facts
  community.vmware.vmware_guest_info:
    hostname: "{{ vcenter_hostname | default(omit) }}"
    username: "{{ vcenter_username | default(omit) }}"
    password: "{{ vcenter_password | default(omit) }}"
    validate_certs: "{{ vcenter_validate_certs | default(omit) }}"
    datacenter: "{{ vmware_datacenter }}"
    name: "{{ vm_guestname }}"
  delegate_to: localhost
  register: vm_facts

- name: Use current IP address (from vm facts)
  ansible.builtin.set_fact:
    ansible_ssh_host: "{{ vm_facts.instance.ipv4 }}"

- name: Ping the VM on dhcp address
  ping:

- name: Apply static IP configuration
  ansible.builtin.include_tasks: configure-network.yml
  when: static_ip is defined

- name: Gather host facts
  ansible.builtin.setup:

# vim: ts=2:sw=2:noautoindent:nosmartindent
